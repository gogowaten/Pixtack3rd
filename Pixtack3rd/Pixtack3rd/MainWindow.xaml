<Window x:Class="Pixtack3rd.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pixtack3rd"
        xmlns:tomato="clr-namespace:ControlLibraryCore20200620;assembly=ControlLibraryCore20200620"
        d:DataContext="{d:DesignInstance Type=local:AppConfig}"
        mc:Ignorable="d"
        Title="MainWindow" Height="950" Width="800" ResizeMode="CanResizeWithGrip"
        Top="{Binding Path=Top, Mode=TwoWay}" Left="{Binding Left, Mode=TwoWay}"
        AllowDrop="True" Name="Main">
  <!--フォーカス時の点線を表示しない-->
  <!--<Window.Resources>
    <Style x:Key="FocusDisable" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
  </Window.Resources>-->

  <Grid Name="MyGrid">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="280"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto"/>
      <RowDefinition/>
      <RowDefinition Height="auto"/>
    </Grid.RowDefinitions>

    <StackPanel Grid.ColumnSpan="2">
      <!--Thumbをカーソルキーで移動中にメニューバーへフォーカスを移動させないためにTabNavigation設定
      とくにカーソルキーで移動させないDirectionNavigationが重要-->
      <!--WPFでのメニューとキーボード操作時のフォーカス移動の話 - プログラム系統備忘録ブログ
https://tan.hatenadiary.jp/entry/20151115/1447574474-->

      <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
        KeyboardNavigation.TabNavigation="Local"
        KeyboardNavigation.ControlTabNavigation="None"
            KeyboardNavigation.DirectionalNavigation="None">
        <MenuItem Header="ファイル(_F)">
          <MenuItem Header="名前をつけて保存(_S)">
            <MenuItem Header="編集状態保存(Root＆アプリ設定)" Click="ButtonSaveAllData_Click"/>
            <!--<MenuItem Header="編集状態保存(Root)" Click="ButtonSaveRootThumb_Click"/>-->
            <MenuItem Header="ActiveThumb" Click="ButtonSaveActiveThumb_Click"/>
            <MenuItem Header="ClickedThumb" Click="ButtonSaveCickedThumb_Click"/>
          </MenuItem>
          <MenuItem Header="画像として名前をつけて保存">
            <MenuItem Header="Root" Click="ButtonSaveToImage_Click"/>
            <MenuItem Header="ActiveThumb" Click="ButtonSaveToImageActive_Click"/>
            <MenuItem Header="ClickedThumb" Click="ButtonSaveToImageClicked_Click"/>
          </MenuItem>
          <MenuItem Header="ファイルを開く">
            <!--<MenuItem Header="Root＆アプリ設定" Click="ButtonLoadDataPrevious_Click"/>-->
            <MenuItem Header="ファイルを開く" Click="ButtonLoadData_Click"/>
            <MenuItem Header="ファイルを開く(アプリ設定はそのまま)" Click="ButtonLoadDataP3WithoutConfig_Click"/>
            <MenuItem Header="対応ファイルを追加(複数可能)" Click="ButtonLoadFiles_Click"/>
            <!--<MenuItem Header="p3ファイルをGroupとして追加" Click="ButtonLoadDataRootToGroup_Click"/>-->
            <!--<MenuItem Header="ThumbData" Click="ButtonLoadDataThumb_Click"/>-->
          </MenuItem>
          <MenuItem Header="編集状態保存(上書き)" InputGestureText="Ctrl+S"/>
          <MenuItem Header="編集状態読み込み"/>
        </MenuItem>

        <MenuItem Header="編集">
          <MenuItem Header="クリップボードから貼り付け" Click="ButtonAddFromClipboard_Click" InputGestureText="Ctrl+V"/>
          <MenuItem Header="クリップボードから貼り付け">
            <MenuItem Header="Bgr32に変換して貼り付け" Click="ButtonAddFromClipboardBgr32_Click" ToolTip="完全不透明(アルファ値255)"/>
            <MenuItem Header="Png形式を優先して貼り付け" Click="ButtonAddFromClipboardPNG_Click" ToolTip="エクセルのグラフやテキストボックス用"/>
          </MenuItem>
          <MenuItem Header="画像としてコピー">
            <MenuItem Header="Root" InputGestureText="Ctrl+Shift+C" Click="ButtonCopyImage_Click"/>
            <MenuItem Header="ActiveThumb" InputGestureText="Ctrl+C" Click="ButtonCopyImageActiveThumb_Click"/>
            <MenuItem Header="ClickedThumb" InputGestureText="Ctrl+Alt+C" Click="ButtonCopyImageClicedThumb_Click"/>
          </MenuItem>
          <MenuItem Header="画像としてコピペ(複製)">
            <MenuItem Header="Root" Click="ButtonDuplicateImage_Click"/>
            <!--<MenuItem Header="ActiveThumb" Click="ButtonDuplicateImageActiveThumb_Click"/>-->
            <MenuItem Header="SelectedThumbs" Click="ButtonDuplicateImageSelectedT_Click"/>
            <!--<MenuItem Header="ClickedThumb" Click="ButtonDuplicateImageClickedThumb_Click"/>-->
          </MenuItem>
          <MenuItem Header="Dataとしてコピペ(複製)">
            <MenuItem Header="Root" Click="ButtonDuplicateData_Click"/>
            <!--<MenuItem Header="ActiveThumb" Click="ButtpmDuplicateDataActiveThumb_Click" InputGestureText="Ctrl+D"/>-->
            <MenuItem Header="SelectedThumbs" Click="ButtonDuplicateDataSelectedT_Click" InputGestureText="Ctrl+D"/>
            <!--<MenuItem Header="ClickedThumb" Click="ButtonDuplicateDataClickedThumb_Click"/>-->
          </MenuItem>

          <MenuItem Header="グループ化" Click="ButtonToGroup_Click" ToolTip="選択Thumbsをグループ化"/>
          <MenuItem Header="グループ解除" Click="ButtonUnGroup_Click" ToolTip="ActiveThumbをグループ解除"/>

          <MenuItem Header="選択Thumbsを全削除" Click="ButtonRemove_Click" InputGestureText="F4"/>
          <MenuItem Header="全Thumb削除" Click="ButtonRemoveAll_Click"/>
        </MenuItem>

        <MenuItem Header="移動">
          <MenuItem Header="ActiveGroup切り替え">
            <MenuItem Header="最外へ (Root)" Click="ButtonDoRootActiveGroup_Click" InputGestureText="Ctrl+Home"/>
            <MenuItem Header="外側へ (今の親Group)" Click="ButtonOut_Click" InputGestureText="Home"/>
            <MenuItem Header="内側へ (ActiveThumb)" Click="ButtonIn_Click" InputGestureText="End"/>
            <MenuItem Header="最奥へ (ClickedThumbの親Group)" Click="ButtonInToClicked_Click" InputGestureText="Ctrl+End"/>
          </MenuItem>
          <MenuItem Header="Z軸">
            <MenuItem Header="最前面へ移動" Click="ButtonZMostUp_Click" InputGestureText="PageDown"/>
            <MenuItem Header="前面へ移動" Click="ButtonZUp_Click" InputGestureText="PageUp"/>
            <MenuItem Header="背面へ移動" Click="ButtonZDown_Click" InputGestureText="Ctrl+Shift+PageUp"/>
            <MenuItem Header="最背面へ移動" Click="ButtonZMostDown_Click" InputGestureText="Ctrl+Shift+PageDown"/>
          </MenuItem>
          <MenuItem Header="XY軸1ピクセル">
            <MenuItem Header="上へ移動" Click="Button1Up_Click" InputGestureText="Shift+Up"/>
            <MenuItem Header="下へ移動" Click="Button1Down_Click" InputGestureText="Shift+Down"/>
            <MenuItem Header="左へ移動" Click="Button1Left_Click" InputGestureText="Shift+Left"/>
            <MenuItem Header="右へ移動" Click="Button1Right_Click" InputGestureText="Shift+Right"/>
          </MenuItem>
          <MenuItem Header="XY軸グリッドスナップ">
            <MenuItem Header="上へ移動" Click="ButtonGoUpGrid_Click" InputGestureText="Up"/>
            <MenuItem Header="下へ移動" Click="ButtonGoDownGrid_Click" InputGestureText="Down"/>
            <MenuItem Header="左へ移動" Click="ButtonGoLeftGrid_Click" InputGestureText="Left"/>
            <MenuItem Header="右へ移動" Click="ButtonGoRightGrid_Click" InputGestureText="Right"/>
          </MenuItem>
        </MenuItem>

        <MenuItem Header="その他">

        </MenuItem>

      </Menu>
    </StackPanel>

    <StatusBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
      <DockPanel DataContext="{Binding ElementName=MyRoot}">
        <ToggleButton Content="toggle" IsChecked="True"/>
        <TextBlock Text="{Binding ActualWidth, StringFormat=size\(0x}"/>
        <TextBlock Text="{Binding ActualHeight, StringFormat=0\)}"/>
        <TextBlock Text="{Binding Thumbs.Count, StringFormat=thumbs 0}"/>
        <TextBlock Text="{Binding Data.Datas.Count, StringFormat=datas 0}"/>
        <Rectangle Width="20" Height="20">
          <Rectangle.Fill>
            <VisualBrush Visual="{Binding ClickedThumb}" Stretch="Uniform"/>
          </Rectangle.Fill>
        </Rectangle>
        <ListBox ItemsSource="{Binding SelectedThumbs}" d:ItemsSource="{d:SampleData ItemCount=3}">
          <!--#region バインドエラー対策-->

          <!--バインドエラー対策ここから-->
          <ListBox.Resources>
            <Style TargetType="ListBoxItem">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
          </ListBox.Resources>
          <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
          </ListBox.ItemContainerStyle>
          <!--バインドエラー対策ここまで-->
          <!--#endregion-->
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>
          <ListBox.ItemTemplate>
            <DataTemplate>
              <StackPanel>
                <Rectangle Height="20" Width="20">
                  <Rectangle.Fill>
                    <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                  </Rectangle.Fill>
                </Rectangle>
                <TextBlock Text="{Binding Data.Type}"/>
              </StackPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>

        <ListBox ItemsSource="{Binding GroupsDirectlyBelow}" d:ItemsSource="{d:SampleData ItemCount=3}">
          <!--#region バインドエラー対策-->

          <!--バインドエラー対策ここから-->
          <ListBox.Resources>
            <Style TargetType="ListBoxItem">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
          </ListBox.Resources>
          <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
          </ListBox.ItemContainerStyle>
          <!--バインドエラー対策ここまで-->
          <!--#endregion-->
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>
          <ListBox.ItemTemplate>
            <DataTemplate>
              <StackPanel>
                <Rectangle Height="20" Width="20">
                  <Rectangle.Fill>
                    <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                  </Rectangle.Fill>
                </Rectangle>
                <CheckBox IsChecked="{Binding Data.IsNotVisiblle}"/>
              </StackPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>

      </DockPanel>
    </StatusBar>

    <Grid Grid.Row="1" Grid.Column="1">
      <ScrollViewer Grid.Row="1" Grid.Column="1"
                  x:Name="MyScrollViewer"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto"
                  UseLayoutRounding="True">
        <!--<Grid KeyDown="Grid_KeyDown" PreviewKeyDown="Grid_PreviewKeyDown">-->
        <!--<local:TTTextBlock TTText="222"/>-->
        <local:TTRoot x:Name="MyRoot"
                    HorizontalAlignment="Left" VerticalAlignment="Top"
                    TTGrid="8" TTXShift="32" TTYShift="32">

          <!--<local:TTTextBlock TTText="ttttest" TTLeft="200" TTTop="20"/>
        <local:TTImage x:Name="MyImage" TTLeft="0" TTTop="0"
                       TTSourcePath="D:\\ブログ用\\テスト用画像\\collection2.png"/>
        <local:TTImage x:Name="MyImage1" TTLeft="100" TTTop="100"
                       TTSourcePath="D:\\ブログ用\\テスト用画像\\collection3.png"/>
        <local:TTImage x:Name="MyImage2" TTLeft="120" TTTop="120"
                       TTSourcePath="D:\\ブログ用\\テスト用画像\\collection4.png"/>-->
          <local:TTImage x:Name="MyImage" TTLeft="0" TTTop="0"
                       TTSourcePath="D:\ブログ用\テスト用画像\hueRect000.png"/>
          <local:TTImage x:Name="MyImage1" TTLeft="24" TTTop="24"
                       TTSourcePath="D:\ブログ用\テスト用画像\hueRect030.png"/>
          <local:TTImage x:Name="MyImage2" TTLeft="48" TTTop="48"
                       TTSourcePath="D:\ブログ用\テスト用画像\hueRect060.png"/>
          <local:TTImage x:Name="MyImage3" TTLeft="72" TTTop="72"
                       TTSourcePath="D:\ブログ用\テスト用画像\hueRect090.png"/>
          <local:TTImage x:Name="MyImage4" TTLeft="96" TTTop="96" RenderTransformOrigin="0.5,0.5"
                       TTSourcePath="D:\ブログ用\テスト用画像\hueRect135.png">
            <local:TTImage.RenderTransform>
              <RotateTransform Angle="20"/>
            </local:TTImage.RenderTransform>
          </local:TTImage>
          <!--<local:TTTextBox x:Name="MyTextBox1" FontFamily="Bahnschrift SemiBold Condensed"
            TTText="TextBox" TTLeft="152" TTTop="152" FontSize="30" FontStretch="Medium"/>-->
          <!--<local:TTTextBox x:Name="MyTextBox1" FontFamily="ＭＳ 明朝" FontStyle="Italic"
            TTText="TextBox" TTLeft="152" TTTop="152" FontSize="30"/>-->
          <local:TTTextBox x:Name="MyTextBox1" BorderBrush="Red" BorderThickness="2"
            TTText="TextBox" TTLeft="152" TTTop="160" FontSize="30"/>
          <local:TTPolylineZ x:Name="MyPolylineZ" TTLeft="200" TTTop="0"
                           MyPoints="0,0 0,100" StrokeThickness="30" HeadAngle="30"
                           HeadBeginType="None" HeadEndType="None"
                           Stroke="OliveDrab" TTFill="OliveDrab"/>
          <local:TTPolylineZ x:Name="MyPolylineZ2" TTLeft="200" TTTop="20"
                           MyPoints="30,0 200,20 100,50" StrokeThickness="10" HeadAngle="30"
                           HeadBeginType="Arrow" HeadEndType="Arrow"
                           Stroke="Crimson" TTFill="Crimson"/>

        </local:TTRoot>
        <!--</Grid>-->
      </ScrollViewer>
      <Canvas x:Name="MyDrawCanvas" Visibility="Visible"
              Cursor="Cross" Background="Transparent" Margin="0,0,0,10">
        <!--<local:PolylineZ Canvas.Top="20" Canvas.Left="10"
          MyPoints="0,0 200,20" StrokeThickness="20" Stroke="Red" Fill="Red"
                         HeadBeginType="Arrow" HeadEndType="Arrow" Angle="30"/>
        <ItemsControl x:Name="MyItemsControlForAnchor"/>-->
      </Canvas>
    </Grid>
    <TabControl Grid.Row="1" Grid.Column="0" x:Name="MyTabControl" TabStripPlacement="Top">

      <TabItem x:Name="MyTab1App" Header="test1">
        <StackPanel>
          <StackPanel.Resources>
            <Style TargetType="Button">
              <Setter Property="Margin" Value="4,0,4,0"/>
            </Style>
          </StackPanel.Resources>

          <StackPanel x:Name="MyStackPanel">
            <ComboBox x:Name="ComboBoxSaveFileType" SelectedItem="{Binding ImageType}"/>
            <Button x:Name="ButtonTest" Content="test!!!!!!!!!!" Click="ButtonTest_Click"/>
            <GroupBox Header="画像ファイルとして保存">
              <WrapPanel>
                <Button x:Name="ButtonSaveToImage" Content="Root" Click="ButtonSaveToImage_Click"/>
                <Button x:Name="ButtonSaveToImageActive" Content="ActiveThumb" Click="ButtonSaveToImageActive_Click"/>
                <Button x:Name="ButtonSaveToImageClicked" Content="Clicked" Click="ButtonSaveToImageClicked_Click"/>
              </WrapPanel>
            </GroupBox>
            <GroupBox Header="上書き保存と読み込み">
              <UniformGrid Rows="2">
                <Button x:Name="ButtonSaveDefault" Content="上書き保存" Click="ButtonSaveDefault_Click"/>
                <Button x:Name="ButtonLoadDefault" Content="上書き保存を読み込み" Click="ButtonLoadDefault_Click"/>
                <TextBox Text="test" BorderThickness="10,3"/>
                <!--<Button x:Name="ButtonLoadLastEndTime" Content="前回終了時を読み込み" Click="ButtonLoadLastEndTime_Click"/>-->
              </UniformGrid>
            </GroupBox>
            <GroupBox Header="ファイル保存">
              <WrapPanel>
                <Button x:Name="ButtonSaveAllData" Content="保存(p3,p3d)" Click="ButtonSaveAllData_Click"/>
                <!--<Button x:Name="ButtonSaveRootThumb" Content="Root" Click="ButtonSaveRootThumb_Click"/>-->
                <Button x:Name="ButtonSaveActiveThumb" Content="Active(p3d)" Click="ButtonSaveActiveThumb_Click"/>
                <Button x:Name="ButtonSaveCickedThumb" Content="Clicked(p3d)" Click="ButtonSaveCickedThumb_Click"/>
              </WrapPanel>
            </GroupBox>
            <GroupBox Header="ファイルを開く">
              <WrapPanel>
                <!--<Button x:Name="ButtonLoadDataPrevious" Content="前回" Click="ButtonLoadDataPrevious_Click"/>-->
                <Button x:Name="ButtonLoadData" Content="p3を開く" Click="ButtonLoadData_Click"/>
                <!--<Button x:Name="ButtonLoadDataThumb" Content="個別" Click="ButtonLoadDataThumb_Click"/>-->
                <!--<Button x:Name="ButtonLoadDataRootToGroup" Content="p3をグループとして追加" Click="ButtonLoadDataRootToGroup_Click"/>-->
                <Button x:Name="ButtonLoadDataP3WithoutConfig" Content="アプリ設定はそのままでp3を開く" Click="ButtonLoadDataP3WithoutConfig_Click"/>
                <Button x:Name="ButtonLoadFiles" Content="対応ファイル(複数)" Click="ButtonLoadFiles_Click"/>
              </WrapPanel>
            </GroupBox>
            <GroupBox Header="クリップボードから画像貼り付け">
              <UniformGrid Rows="1">
                <Button x:Name="ButtonAddFromClipboard" Content="通常" Click="ButtonAddFromClipboard_Click"/>
                <Button x:Name="ButtonAddFromClipboardBgr32" Content="Bgr32" Click="ButtonAddFromClipboardBgr32_Click"/>
                <Button x:Name="ButtonAddFromClipboardPNG" Content="png" Click="ButtonAddFromClipboardPNG_Click"/>
                <!--<Button x:Name="ButtonAddFromClipboardPNGBgr32" Content="pngBgr32" Click="ButtonAddFromClipboardPNGBgr32_Click"/>-->
              </UniformGrid>
            </GroupBox>
            <GroupBox Header="画像としてコピー">
              <UniformGrid Rows="1">
                <Button x:Name="ButtonCopyImage" Content="全体" Click="ButtonCopyImage_Click"/>
                <Button x:Name="ButtonCopyImageActiveThumb" Content="Active" Click="ButtonCopyImageActiveThumb_Click"/>
                <Button x:Name="ButtonCopyImageClicedThumb" Content="Clicked" Click="ButtonCopyImageClicedThumb_Click"/>
              </UniformGrid>
            </GroupBox>
            <GroupBox Header="画像としてコピペ(複製)">
              <UniformGrid Rows="1">
                <Button x:Name="ButtonDuplicateImage" Content="全体" Click="ButtonDuplicateImage_Click"/>
                <!--<Button x:Name="ButtpmDuplicateImageActiveThumb" Content="Active" Click="ButtonDuplicateImageActiveThumb_Click"/>-->
                <Button x:Name="ButtonDuplicateImageSelectedT" Content="選択Thumb" Click="ButtonDuplicateImageSelectedT_Click"/>
                <!--<Button x:Name="ButtonDuplicateImageClickedThumb" Content="Clicked" Click="ButtonDuplicateImageClickedThumb_Click"/>-->
              </UniformGrid>
            </GroupBox>
            <GroupBox Header="Dataとしてコピペ(複製)">
              <UniformGrid Rows="1">
                <Button x:Name="ButtonDuplicateData" Content="全体" Click="ButtonDuplicateData_Click"/>
                <!--<Button x:Name="ButtpmDuplicateDataActiveThumb" Content="Active" Click="ButtpmDuplicateDataActiveThumb_Click"/>-->
                <Button x:Name="ButtonDuplicateDataSelectedT" Content="選択Thumb" Click="ButtonDuplicateDataSelectedT_Click"/>
                <!--<Button x:Name="ButtonDuplicateDataClickedThumb" Content="Clicked" Click="ButtonDuplicateDataClickedThumb_Click"/>-->
              </UniformGrid>
            </GroupBox>
            <UniformGrid Rows="3" Columns="2">
              <Button x:Name="ButtonToGroup" Content="グループ化" Click="ButtonToGroup_Click"/>
              <Button x:Name="ButtonUnGroup" Content="グループ解除" Click="ButtonUnGroup_Click"/>
              <Button x:Name="ButtonRemove" Content="選択Thumb削除" Click="ButtonRemove_Click"/>
              <Button x:Name="ButtonRemoveAll" Content="全削除" Click="ButtonRemoveAll_Click"/>
            </UniformGrid>
            <GroupBox Header="ActiveGroupの切り替え">
              <UniformGrid>
                <Button x:Name="ButtonIn" Content="In" Click="ButtonIn_Click"/>
                <Button x:Name="ButtonOut" Content="Out" Click="ButtonOut_Click"/>
                <Button x:Name="ButtonInToClicked" Content="InToClicked" Click="ButtonInToClicked_Click"/>
                <Button x:Name="ButtonDoRootActiveGroup" Content="RootActiveGroup" Click="ButtonDoRootActiveGroup_Click"/>
              </UniformGrid>
            </GroupBox>

            <!--<GroupBox Header="グリッドスナップ移動、対象はActiveThumb">
              <UniformGrid Rows="1">
                <Button x:Name="ButtonGoUpGrid" Content="上" Click="ButtonGoUpGrid_Click"/>
                <Button x:Name="ButtonGoDownGrid" Content="下" Click="ButtonGoDownGrid_Click"/>
                <Button x:Name="ButtonGoLeftGrid" Content="左" Click="ButtonGoLeftGrid_Click"/>
                <Button x:Name="ButtonGoRightGrid" Content="右" Click="ButtonGoRightGrid_Click"/>
              </UniformGrid>
            </GroupBox>
            <GroupBox Header="1ピクセル移動、対象はActiveThumb">
              <UniformGrid Rows="1">
                <RepeatButton x:Name="Button1Up" Content="上" Click="Button1Up_Click"/>
                <RepeatButton x:Name="Button1Down" Content="下" Click="Button1Down_Click"/>
                <RepeatButton x:Name="Button1Left" Content="左" Click="Button1Left_Click"/>
                <RepeatButton x:Name="Button1Right" Content="右" Click="Button1Right_Click"/>
              </UniformGrid>
            </GroupBox>-->

          </StackPanel>
        </StackPanel>
      </TabItem>

      <TabItem Header="test2" DataContext="{Binding ElementName=MyRoot}">
        <TabItem.Resources>
          <Style TargetType="Button">
            <Setter Property="Margin" Value="4,1,4,0"/>
          </Style>
        </TabItem.Resources>
        <StackPanel>
          <StackPanel.Resources>
            <Style TargetType="TextBlock">
              <Setter Property="Margin" Value="2,1,4,1"/>
            </Style>
            <Style TargetType="tomato:NumericUpDown">
              <Setter Property="Margin" Value="2,1,4,4"/>
            </Style>
          </StackPanel.Resources>

          <!--<TreeView ItemsSource="{Binding Data.Datas}">
            <TreeView.Resources>
              <Style TargetType="TreeViewItem">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
              </Style>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
              <Style TargetType="TreeViewItem">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
              </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
              <HierarchicalDataTemplate DataType="{x:Type local:Data}" ItemsSource="{Binding Datas}">
                <StackPanel Orientation="Horizontal">
                  <Image Source="{Binding BitmapSource}" Width="20" Height="20"/>
                  <TextBlock Text="{Binding Type}"/>
                </StackPanel>
              </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
          </TreeView>-->



          <GroupBox Header="ActiveThumb" DataContext="{Binding ActiveThumb}">
            <StackPanel>
              <Canvas Width="250" Height="160" HorizontalAlignment="Left">
                <Grid Width="90" Height="70" Canvas.Left="0" Canvas.Top="90">
                  <Border Background="White" BorderBrush="Gray" BorderThickness="1">
                    <Rectangle Width="80" Height="60"
                         DataContext="{Binding ElementName=MyRoot}">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding BackActiveThumb}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Border>
                </Grid>
                <Grid Canvas.Left="60" Canvas.Top="30" Width="130" Height="100" MouseWheel="Grid_MouseWheel">
                  <Border Background="White" BorderBrush="Gray" BorderThickness="1">
                    <Rectangle Width="120" Height="90" Canvas.Left="60" Canvas.Top="35">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Border>
                </Grid>
                <Grid Width="90" Height="70">
                  <Border  Background="White" BorderBrush="Gray" BorderThickness="1">
                    <Rectangle Width="80" Height="60"
                         DataContext="{Binding ElementName=MyRoot}"
                       Canvas.Left="0" Canvas.Top="0">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding FrontActiveThumb}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Border>
                </Grid>
                <GroupBox Header="Z移動" Canvas.Left="190" MouseWheel="GroupBox_MouseWheel">
                  <StackPanel>
                    <Button x:Name="ButtonMostUp" Content="最前面" Click="ButtonZMostUp_Click"/>
                    <Button x:Name="ButtonUp" Content="前面" Click="ButtonZUp_Click"/>
                    <Button x:Name="ButtonDown" Content="背面" Click="ButtonZDown_Click"/>
                    <Button x:Name="ButtonMostDown" Content="最背面" Click="ButtonZMostDown_Click"/>
                  </StackPanel>
                </GroupBox>
                <Button Content="グループ解除" Click="ButtonUnGroup_Click" Canvas.Left="100" Canvas.Top="8"/>
              </Canvas>

              <TextBlock Text="{Binding Data.Guid, StringFormat=Guid \= {0}}"/>
              <TextBlock Text="{Binding Data.Type, StringFormat=Type \= {0}}"/>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Data.X, StringFormat=x\={0:000}}"/>
                <TextBlock Text="{Binding Data.Y, StringFormat=y\={0:000}}"/>
                <TextBlock Text="{Binding ActualWidth, StringFormat=幅\={0:000}}"/>
                <TextBlock Text="{Binding ActualHeight, StringFormat=高さ\={0:000}}"/>
              </StackPanel>
              <TextBlock Text="{Binding Data.Text}"/>
            </StackPanel>
          </GroupBox>
          <GroupBox Header="ActiveGroup" DataContext="{Binding ActiveGroup}">
            <StackPanel>
              <StackPanel Orientation="Horizontal">
                <StackPanel>
                  <GroupBox Header="切り替え">
                    <UniformGrid Rows="1">
                      <Button Content="外側へ" Click="ButtonOut_Click"/>
                      <Button Content="内側へ" Click="ButtonIn_Click"/>
                    </UniformGrid>
                  </GroupBox>
                  <Grid Width="140" Height="110">
                    <Border Background="White" BorderBrush="Gray" BorderThickness="1">
                      <Rectangle>
                        <Rectangle.Fill>
                          <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                        </Rectangle.Fill>
                      </Rectangle>
                    </Border>
                  </Grid>
                </StackPanel>
                <WrapPanel Width="100">
                  <tomato:NumericUpDown BorderBrush="DodgerBlue"
                              MyValue="{Binding TTXShift}" MyStringFormat="シフトX 000;シフトX -000;シフトX 000"
                            MyButtonMarkColor="DodgerBlue" Foreground="DodgerBlue"
                            MyMinValue="-1024" MyMaxValue="1024" MyLargeChange="8"/>
                  <tomato:NumericUpDown BorderBrush="DodgerBlue"
                              MyValue="{Binding TTYShift}" MyStringFormat="シフトY 000;シフトY -000;シフトY 000"
                            MyButtonMarkColor="DodgerBlue" Foreground="DodgerBlue"
                            MyMinValue="-1024" MyMaxValue="1024" MyLargeChange="8"/>
                  <GroupBox Header="GridSize">
                    <StackPanel>
                      <tomato:NumericUpDown x:Name="NumeGrid"
                        BorderBrush="DodgerBlue" MyButtonMarkColor="DodgerBlue" Foreground="DodgerBlue"
                              MyValue="{Binding TTGrid}" MyStringFormat="Grid 000;Grid -000;Grid 000"
                            MyMinValue="1" MyMaxValue="1024" MyLargeChange="8"/>
                      <UniformGrid>
                        <Button Content="1" Click="ButtonGrid1_Click"/>
                        <Button Content="8" Click="ButtonGrid8_Click"/>
                      </UniformGrid>
                    </StackPanel>
                  </GroupBox>
                </WrapPanel>
              </StackPanel>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Data.X, StringFormat=x\={0:000}}"/>
                <TextBlock Text="{Binding Data.Y, StringFormat=y\={0:000}}"/>
                <TextBlock Text="{Binding ActualWidth, StringFormat=幅\={0:000}}"/>
                <TextBlock Text="{Binding ActualHeight, StringFormat=高さ\={0:000}}"/>
              </StackPanel>
              <GroupBox Header="クリップボードから画像貼り付け">
                <UniformGrid Rows="1">
                  <Button Content="通常" Click="ButtonAddFromClipboard_Click"/>
                  <Button Content="Bgr32" Click="ButtonAddFromClipboardBgr32_Click"/>
                  <Button  Content="png" Click="ButtonAddFromClipboardPNG_Click"/>
                </UniformGrid>
              </GroupBox>
            </StackPanel>
          </GroupBox>

          <GroupBox Header="ClickedThumb" DataContext="{Binding ClickedThumb}">
            <StackPanel Orientation="Horizontal">
              <Grid Width="30" Height="30">
                <Border  Background="White" BorderBrush="Gray" BorderThickness="1">
                  <Rectangle Width="20" Height="20"
                       Canvas.Left="0" Canvas.Top="0">
                    <Rectangle.Fill>
                      <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                    </Rectangle.Fill>
                  </Rectangle>
                </Border>
              </Grid>
              <StackPanel>
                <TextBlock Text="{Binding Data.Type, StringFormat=Type \= {0}}"/>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="{Binding Data.X, StringFormat=x\={0:000}}"/>
                  <TextBlock Text="{Binding Data.Y, StringFormat=y\={0:000}}"/>
                  <TextBlock Text="{Binding ActualWidth, StringFormat=幅\={0:000}}"/>
                  <TextBlock Text="{Binding ActualHeight, StringFormat=高さ\={0:000}}"/>
                </StackPanel>
                <TextBox Text="{Binding Data.Text, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"/>
              </StackPanel>
            </StackPanel>
          </GroupBox>

          <GroupBox Header="選択Thumbs" DataContext="{Binding SelectedThumbs}">
            <StackPanel>
              <DockPanel>
                <Button Content="削除" Click="ButtonRemove_Click"/>
                <ListBox ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" d:ItemsSource="{d:SampleData ItemCount=5}">
                  <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ListBox.ItemsPanel>
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <StackPanel Orientation="Vertical">
                        <Rectangle Width="20" Height="20">
                          <Rectangle.Fill>
                            <VisualBrush Visual="{Binding}"/>
                          </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock Text="{Binding Data.Type}"/>
                      </StackPanel>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </DockPanel>
              <DockPanel>
                <Button Content="グループ化" Click="ButtonToGroup_Click"/>
              </DockPanel>
            </StackPanel>
          </GroupBox>
          <TextBlock Text="{Binding Thumbs.Count, StringFormat=RootItem数 \= {0}}"/>
          <TextBlock Text="{Binding TTWakuVisibleType}"/>

        </StackPanel>
      </TabItem>
      <TabItem Header="文字列" DataContext="{Binding ElementName=MyRoot}">
        <!--ScrollViewerの中ならマウスホイールで選択タブが変化しなくなる-->
        <ScrollViewer VerticalScrollBarVisibility="Auto">
          <StackPanel>
            <StackPanel.Resources>
              <Style TargetType="UniformGrid">
                <Setter Property="Margin" Value="1"/>
              </Style>
              <Style TargetType="tomato:NumericUpDown">
                <Setter Property="Margin" Value="1,0"/>
              </Style>
              <local:ConverterArgbNumericToBrush x:Key="color"/>
              <local:ConverterFontWeightIsBold x:Key="isBold"/>
              <local:ConverterFontStyleIsItalic x:Key="isItalic"/>
              <local:ConverterThickness x:Key="thickness"/>
            </StackPanel.Resources>
            <Grid Height="100">
              <TextBox Text="見本"  HorizontalAlignment="Center" VerticalAlignment="Center"
                       IsReadOnly="True"
                       FontSize="{Binding ElementName=NumeFontSize, Path=MyValue}"
                       FontFamily="{Binding ElementName=MyCombBoxFontFmilyNames, Path=SelectedValue}"
                       FontWeight="{Binding ElementName=MyCheckIsBold, Converter={StaticResource isBold}, Path=IsChecked}"
                       FontStyle="{Binding ElementName=MyCheckIsItalic, Converter={StaticResource isItalic}, Path=IsChecked}"
                       BorderThickness="{Binding ElementName=NumeWakuThickness, Converter={StaticResource thickness}, Path=MyValue}">
                <TextBox.Foreground>
                  <MultiBinding Converter="{StaticResource color}">
                    <MultiBinding.Bindings>
                      <Binding ElementName="MyNumeFontA" Path="MyValue"/>
                      <Binding ElementName="MyNumeFontR" Path="MyValue"/>
                      <Binding ElementName="MyNumeFontG" Path="MyValue"/>
                      <Binding ElementName="MyNumeFontB" Path="MyValue"/>
                    </MultiBinding.Bindings>
                  </MultiBinding>
                </TextBox.Foreground>
                <TextBox.Background>
                  <MultiBinding Converter="{StaticResource color}">
                    <MultiBinding.Bindings>
                      <Binding ElementName="MyNumeBackA" Path="MyValue"/>
                      <Binding ElementName="MyNumeBackR" Path="MyValue"/>
                      <Binding ElementName="MyNumeBackG" Path="MyValue"/>
                      <Binding ElementName="MyNumeBackB" Path="MyValue"/>
                    </MultiBinding.Bindings>
                  </MultiBinding>
                </TextBox.Background>
                <TextBox.BorderBrush>
                  <MultiBinding Converter="{StaticResource color}">
                    <MultiBinding.Bindings>
                      <Binding ElementName="MyNumeWakuA" Path="MyValue"/>
                      <Binding ElementName="MyNumeWakuR" Path="MyValue"/>
                      <Binding ElementName="MyNumeWakuG" Path="MyValue"/>
                      <Binding ElementName="MyNumeWakuB" Path="MyValue"/>
                    </MultiBinding.Bindings>
                  </MultiBinding>
                </TextBox.BorderBrush>


              </TextBox>
            </Grid>
            <Button x:Name="MyButtonRenderText" Content="描画！" Click="ButtonRenderText_Click"/>
            <TextBox x:Name="MyTextBox" Text="test"
                     TextWrapping="Wrap" AcceptsTab="True" AcceptsReturn="True"/>
            <DockPanel>
              <tomato:NumericUpDown x:Name="NumeFontSize" MyValue="30"
                                MyStringFormat="Size 000"
                                MyMinValue="1" MyMaxValue="1000" MySmallChange="1" MyLargeChange="10"
                                MouseWheel="NumericUpDown_MouseWheel"/>
              <ComboBox x:Name="MyCombBoxFontFmilyNames" SelectedValuePath="Key" DisplayMemberPath="Value"/>
            </DockPanel>
            <UniformGrid Rows="1">
              <CheckBox x:Name="MyCheckIsBold" Content="太字" VerticalAlignment="Center"/>
              <CheckBox x:Name="MyCheckIsItalic" Content="斜体" VerticalAlignment="Center"/>

            </UniformGrid>
            <UniformGrid Rows="1">
              <TextBlock Text="文字色" VerticalAlignment="Center"/>
              <tomato:NumericUpDown x:Name="MyNumeFontA" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="A 000" BorderBrush="Transparent"/>
              <tomato:NumericUpDown x:Name="MyNumeFontR" MyMinValue="0" MyMaxValue="255" MyValue="00" MyStringFormat="R 000" BorderBrush="Transparent" Foreground="Crimson" MyButtonMarkColor="Crimson"/>
              <tomato:NumericUpDown x:Name="MyNumeFontG" MyMinValue="0" MyMaxValue="255" MyValue="0" MyStringFormat="G 000" BorderBrush="Transparent" Foreground="ForestGreen" MyButtonMarkColor="ForestGreen"/>
              <tomato:NumericUpDown x:Name="MyNumeFontB" MyMinValue="0" MyMaxValue="255" MyValue="0" MyStringFormat="B 000" BorderBrush="Transparent" Foreground="RoyalBlue" MyButtonMarkColor="RoyalBlue"/>
            </UniformGrid>
            <UniformGrid Rows="1">
              <TextBlock Text="背景色" VerticalAlignment="Center"/>
              <tomato:NumericUpDown x:Name="MyNumeBackA" MyMinValue="0" MyMaxValue="255" MyValue="0" MyStringFormat="A 000" BorderBrush="Transparent"/>
              <tomato:NumericUpDown x:Name="MyNumeBackR" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="R 000" BorderBrush="Transparent" Background="Crimson" Foreground="White" MyButtonMarkColor="White"/>
              <tomato:NumericUpDown x:Name="MyNumeBackG" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="G 000" BorderBrush="Transparent" Background="ForestGreen" Foreground="White" MyButtonMarkColor="White"/>
              <tomato:NumericUpDown x:Name="MyNumeBackB" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="B 000" BorderBrush="Transparent" Background="DodgerBlue" Foreground="White" MyButtonMarkColor="White"/>
            </UniformGrid>
            <UniformGrid Rows="1">
              <!--<TextBlock Text="枠色" VerticalAlignment="Center"/>-->
              <tomato:NumericUpDown x:Name="NumeWakuThickness" MyValue="0"
                                MyStringFormat="枠 000"
                                MyMinValue="0" MyMaxValue="1000" MySmallChange="1" MyLargeChange="10"
                                MouseWheel="NumericUpDown_MouseWheel"/>

              <tomato:NumericUpDown x:Name="MyNumeWakuA" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="A 000"/>
              <tomato:NumericUpDown x:Name="MyNumeWakuR" MyMinValue="0" MyMaxValue="255" MyValue="255" MyStringFormat="R 000" BorderBrush="Crimson" Foreground="Black" MyButtonMarkColor="Crimson"/>
              <tomato:NumericUpDown x:Name="MyNumeWakuG" MyMinValue="0" MyMaxValue="255" MyValue="0" MyStringFormat="G 000" BorderBrush="ForestGreen" Foreground="Black" MyButtonMarkColor="ForestGreen"/>
              <tomato:NumericUpDown x:Name="MyNumeWakuB" MyMinValue="0" MyMaxValue="255" MyValue="0" MyStringFormat="B 000" BorderBrush="DodgerBlue" Foreground="Black" MyButtonMarkColor="RoyalBlue"/>
            </UniformGrid>

            <!--<ComboBox x:Name="MyComboBoxFontWeight" SelectedValuePath="Key" DisplayMemberPath="Value"/>
            -->
            <!--<ComboBox.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Key}" FontStyle="{Binding Value}"/>
                </DataTemplate>
              </ComboBox.ItemTemplate>-->
            <!--

            <ComboBox x:Name="MyComboBoxFontStyle" SelectedValuePath="Key" DisplayMemberPath="Value"/>-->

            <!--<TextBox x:Name="MyTextBoxText" AcceptsReturn="True" AcceptsTab="True" FontFamily="ＭＳ 明朝"
                   TextWrapping="Wrap" Text="testttttttttttttttttttttttt"/>-->

          </StackPanel>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="設定" DataContext="{Binding}">
        <StackPanel>
          <CheckBox Content="起動時に前回終了時の状態を読み込む" IsChecked="{Binding IsLoadPreviewData}"/>
          <CheckBox Content="複数追加時はファイル名昇順ソートで追加する" IsChecked="{Binding IsAscendingSort}"/>
          <CheckBox Content="ファイルからのThumb追加は最上層にする" IsChecked="{Binding IsAddUpper}">
            <CheckBox.ToolTip>
              <TextBlock>
                初期値On、<LineBreak/>
                複製や貼付け時は常に上層へ追加になる
              </TextBlock>
            </CheckBox.ToolTip>
          </CheckBox>

          <GroupBox Header="枠表示設定">
            <GroupBox.Resources>
              <local:ConverterEnumToBool x:Key="waku"/>
            </GroupBox.Resources>
            <WrapPanel Name="MyWrap">
              <RadioButton Content="表示しない" IsChecked="{Binding
              ConverterParameter={x:Static local:WakuVisibleType.None},
              Path=WakuVisibleType,
              Converter={StaticResource waku}}"/>
              <RadioButton Content="全部表示" IsChecked="{Binding
              ConverterParameter={x:Static local:WakuVisibleType.All},
              Path=WakuVisibleType,
              Converter={StaticResource waku}}"/>
              <RadioButton Content="Group以外表示" IsChecked="{Binding
              ConverterParameter={x:Static local:WakuVisibleType.NotGroup},
              Path=WakuVisibleType,
              Converter={StaticResource waku}}"/>
              <RadioButton Content="ActiveGroupだけ" IsChecked="{Binding
              ConverterParameter={x:Static local:WakuVisibleType.OnlyActiveGroup},
              Path=WakuVisibleType,
              Converter={StaticResource waku}}"/>

            </WrapPanel>
          </GroupBox>
        </StackPanel>
      </TabItem>
    </TabControl>
  </Grid>
</Window>
